# Generated by Django 5.1.6 on 2025-02-11 08:35

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BoosterPack',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('pack_name', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('card_id', models.CharField(max_length=200, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('supertype', models.CharField(max_length=200)),
                ('subtypes', models.JSONField(default=list)),
                ('level', models.CharField(max_length=200)),
                ('hp', models.PositiveIntegerField()),
                ('types', models.JSONField(default=list)),
                ('evolves_from', models.CharField(blank=True, max_length=200)),
                ('evolves_to', models.JSONField(blank=True, default=list)),
                ('rules', models.JSONField(blank=True, default=list)),
                ('ancient_trait', models.JSONField(default=dict)),
                ('abilities', models.JSONField(default=list)),
                ('attacks', models.JSONField(default=list)),
                ('weaknesses', models.JSONField(default=list)),
                ('resistances', models.JSONField(default=list)),
                ('retreat_cost', models.JSONField(default=list)),
                ('convertedRetreatCost', models.PositiveIntegerField()),
                ('number', models.CharField(max_length=200)),
                ('artist', models.CharField(max_length=200)),
                ('rarity', models.CharField(max_length=200)),
                ('flavor_text', models.CharField(max_length=200)),
                ('national_pokedex_numbers', models.JSONField(default=list)),
                ('legalities', models.JSONField(default=dict)),
                ('regulation_mark', models.CharField(max_length=200)),
                ('images', models.JSONField(default=dict)),
                ('tcgplayer', models.JSONField(default=dict)),
                ('cardmarket', models.JSONField(default=dict)),
                ('is_featured', models.BooleanField(default=False)),
                ('image', models.ImageField(upload_to='card-images/')),
            ],
        ),
        migrations.CreateModel(
            name='CardSet',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('set_id', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=200)),
                ('series', models.CharField(max_length=200)),
                ('printed_total', models.IntegerField()),
                ('total', models.IntegerField()),
                ('legalities', models.JSONField(default=dict)),
                ('ptcgo_code', models.CharField(max_length=10)),
                ('release_date', models.DateField()),
                ('updated_at', models.DateTimeField()),
                ('images', models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True, max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='BoosterBox',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('box_name', models.CharField(max_length=200)),
                ('total_packs', models.IntegerField(default=0)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('packs', models.ManyToManyField(to='cards.boosterpack')),
            ],
        ),
        migrations.CreateModel(
            name='CardEntity',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ask_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('card', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cards.card')),
                ('original_owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='original_owner', to='accounts.client')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.client')),
                ('grade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cards.grade')),
            ],
        ),
        migrations.AddField(
            model_name='boosterpack',
            name='cards',
            field=models.ManyToManyField(to='cards.cardentity'),
        ),
        migrations.AddField(
            model_name='card',
            name='set',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cards.cardset'),
        ),
        migrations.AddField(
            model_name='card',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cards.category'),
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('cards', models.ManyToManyField(to='cards.cardentity')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.client')),
            ],
        ),
    ]
